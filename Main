import java.util.*;
import java.io.*;


//Variables declarations
float cX = 300; //X position
float cY = 300; //Y position
float bX, bY = 0; //Background (b) positions within the screen
float imgWidth = 5064;
float imgHeight = 2154;
float speed = 30; //Displacement between each position
PImage background;
PImage frontLayer;
PImage character;
PImage fuse;
PImage ghost;
boolean setUp = true; //if setup fails the boolean is changed.
int matrixPosX = 10; //Starting character X position within the matrix.
int matrixPosY = 10; //Starting character Y position within the matrix
int fusesNumber = 4;//number of fuses collected
float battery = 180;
int counter = 0; 

//Main Setup
void setup(){
  size(600,600); //Screen size, 600x600 pixels
  frameRate(30);//30 frames per second
  smooth();
  background = loadImage("images/map.png"); //map
  frontLayer = loadImage("images/lantern.png"); //lantern
  character = loadImage("images/character.png");//character
  fuse = loadImage("images/fuse.png");//fuse
  ghost = loadImage("images/ghost.png");//ghost
}

//Screen "drawing" (animations)
void draw(){
  if(!setUp){
    background(0,0,0);
    textSize(32);
    text("Something went wrong", 0,200);  
  } else {
    background(256,256,256);
    //fill(0,0,0);
    //rect(600,600,0,0);
    image(background,bX,bY,imgWidth,imgHeight);
    image(character,cX,cY,30,30);
    //image(fuse,0,0,30,60);
    //image(ghost,00,00,60,60);
    //image(frontLayer,cX-570,cY-570,1170,1170);  
    //barFuses();
    //barBattery();
    lines();
    counter++;
    if(battery != 0 && counter == 30){
      battery--;
      counter = 0; 
    }
    
    fill(230);
    textSize(32);
    text(cX, 10, 30); 
    text(cY,10,60);
    text(matrixPosX,10,90);
    text(matrixPosY,10,120);
    
  }
}

void keyPressed(KeyEvent e){
 if(key == CODED){
  try{
    if(matrixPosX+1<=168 || matrixPosX-1>=0 || matrixPosY+1<=71 || matrixPosY-1>=0){
      if(keyCode == UP  && limMatrix[matrixPosY-1][matrixPosX] == 0){
      bY += speed;
      matrixPosY--;
    } else if(keyCode == DOWN && limMatrix[matrixPosY+1][matrixPosX] == 0){
      bY -= speed;
      matrixPosY++;
    } else if(keyCode == LEFT && limMatrix[matrixPosY][matrixPosX-1] == 0){
      bX += speed;
      matrixPosX--;
    } else if(keyCode == RIGHT && ((limMatrix[matrixPosY][matrixPosX+1] == 0))){
      bX -= speed;
      matrixPosX++;
    }
    }
   } catch(Exception f){
   }
 }
}
